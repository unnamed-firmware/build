From d2d0b7bd784225a1cd4374d75efadbdd711b4c2c Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Sun, 31 Mar 2024 17:18:05 -0400
Subject: [PATCH 25/28] If AVB fails, ignore/disable AVB

DO NOT INCLUDE THIS PATCH If you want to run GSIs on a locked bootloader

This is needed on Honor View 10 which declares "avb" in fstab while
being AVB1.0
---
 init/first_stage_init.cpp  |  6 +++++-
 init/first_stage_mount.cpp | 10 +++++++++-
 2 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/init/first_stage_init.cpp b/init/first_stage_init.cpp
index e06a64593..960b3389c 100644
--- a/init/first_stage_init.cpp
+++ b/init/first_stage_init.cpp
@@ -533,7 +533,11 @@ int FirstStageMain(int argc, char** argv) {
         }
 
         if (!created_devices && !fsm->DoCreateDevices()) {
-            LOG(FATAL) << "Failed to create devices required for first stage mount";
+            LOG(ERROR) << "Failed to create devices required for first stage mount, retrying without avb";
+            fsm = CreateFirstStageMount(cmdline + " no_vbmeta");
+            if(!fsm->DoCreateDevices()) {
+                LOG(FATAL) << "Failed to create devices required for first stage mount, retrying without avb";
+            }
         }
 
         if (!fsm->DoFirstStageMount()) {
diff --git a/init/first_stage_mount.cpp b/init/first_stage_mount.cpp
index 5e8e458f9..a51dece11 100644
--- a/init/first_stage_mount.cpp
+++ b/init/first_stage_mount.cpp
@@ -239,6 +239,12 @@ Result<std::unique_ptr<FirstStageMount>> FirstStageMount::Create(const std::stri
     } else {
         fstab = ReadFirstStageFstabAndroid();
     }
+    if (cmdline.find("no_vbmeta") != std::string::npos) {
+        for(auto& part: *fstab) {
+            part.avb_keys = "";
+            part.fs_mgr_flags.avb = false;
+        }
+    }
     if (!fstab.ok()) {
         return fstab.error();
     }
@@ -277,7 +283,9 @@ bool FirstStageMountVBootV2::DoFirstStageMount() {
         return true;
     }
 
-    if (!MountPartitions()) return false;
+    if (!MountPartitions()) {
+        return false;
+    }
 
     return true;
 }
-- 
2.43.0

